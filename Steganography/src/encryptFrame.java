/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frame.java
 *
 * Created on Mar 31, 2009, 7:08:51 PM
 */

/**
 *
 * @author Alok Ranjan
 */
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.awt.image.PixelGrabber;
import java.io.File;
import java.math.BigInteger;
import javax.imageio.IIOException;

public class encryptFrame extends javax.swing.JFrame {

    /** Creates new form frame */
    static String msg="";
    static String code=new String();
    static String bin=new String();
    static String bin1=new String();
    static String code1=new String();
    static String pass = new String();
    static String bin2 = new String();
    String str = "";
    File file, savefile;
    static int a =0, a1 =0;
    JFileChooser fc, fs;
    public encryptFrame() throws Exception{
        initComponents();
        fc = new JFileChooser();
        fs = new JFileChooser();
        //fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.addChoosableFileFilter(new ImageFilter());
        fs.addChoosableFileFilter(new pngFilter());
        fc.setAcceptAllFileFilterUsed(false);
        fs.setAcceptAllFileFilterUsed(false);
        //Add custom icons for file types.
            fc.setFileView(new ImageFileView());
	    //Add the preview pane.
            fc.setAccessory(new ImagePreview(fc));
            
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        selectfile = new javax.swing.JTextField();
        browse = new javax.swing.JButton();
        OK = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Enter Text");

        selectfile.setEditable(false);
        selectfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectfileActionPerformed(evt);
            }
        });

        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter PIN");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel4.setText("Choose Image");

        jLabel5.setText("Â© rSteg 1.0");

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(331, 331, 331))
                                    .addComponent(selectfile, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(browse, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browse)
                    .addComponent(selectfile, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(OK))
                .addGap(22, 22, 22)
                .addComponent(jLabel5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        // TODO add your handling code here:
        int returnVal = fc.showOpenDialog(encryptFrame.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                file = fc.getSelectedFile();
                String filename = "" + file;
                selectfile.setText(filename);
                //This is where a real application would open the file.
                //log.append("Opening: " + file.getName() + "." + newline);

            } 
           // log.setCaretPosition(log.getDocument().getLength());
}//GEN-LAST:event_browseActionPerformed

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        int returnValue = fs.showSaveDialog(encryptFrame.this);
        if(returnValue == JFileChooser.APPROVE_OPTION)
        {
        savefile = fs.getSelectedFile();
        String saveFileName = "" +savefile;
        int saveFileLength = saveFileName.length();
        //System.out.println(saveFileName + "      "+saveFileLength);
        if(saveFileLength<4)
            saveFileName += ".png";
        if(saveFileName.charAt(saveFileLength-4)!='.'
                && saveFileName.charAt(saveFileLength-3)!='p'
                && saveFileName.charAt(saveFileLength-2)!='n'
                && saveFileName.charAt(saveFileLength-1)!='g')
            saveFileName += ".png";
        saveFileLength = saveFileName.length();
        //System.out.println(saveFileName + "      "+saveFileLength);
        msg=jTextArea1.getText();
        pass = jTextField2.getText();
        //System.out.println("msg="+msg+" pass= "+pass);
        //System.out.println(str);
        code=crypt(new BigInteger("3078434453"),new BigInteger("5"),msg);
        code1=crypt(new BigInteger("3078434453"),new BigInteger("5"),pass);
        //System.out.println("code="+code);
        int k=code.length();
        bin1=binary_code(k,code);
        k = code1.length();
        bin2 = binary_code(k,code1);
        //System.out.println("bin1="+bin1);
        //System.out.println("bin2="+bin2);
        a=bin1.length()+ bin2.length();
        a1 = bin2.length();
        bin1 =bin1+ bin2;
        
        //System.out.println("a="+a);
                    try {
                        encode(a, file, saveFileName);
                    } catch (IOException ex1) {
                        Logger.getLogger(encryptFrame.class.getName()).log(Level.SEVERE, null, ex1);
                    }
        }
        else
            return;

        this.setVisible(false);
}//GEN-LAST:event_OKActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.setVisible(false);
}//GEN-LAST:event_cancelActionPerformed

    private void selectfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectfileActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_selectfileActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        //str = jTextField2.getText();
        //System.out.println(str);
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        try  {
                new About().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new encryptFrame().setVisible(true);
                } catch (Exception ex) {

                    Logger.getLogger(encryptFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JButton browse;
    private javax.swing.JButton cancel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField selectfile;
    // End of variables declaration//GEN-END:variables
public static String crypt(BigInteger n,BigInteger e, String msg1)
    {
     int fp=0,lp=32,j=0,i,c=0;
     BigInteger encod[]=new BigInteger[1000000];
     BigInteger encry[]=new BigInteger[1000000];
     String binary="";
     String coded=new String();
     String sixteen[]=new String[1000000];
     String str="";
     for(i=0;i<msg1.length();i++)
     {
     binary=Integer.toBinaryString(msg1.charAt(i));
     for(j=binary.length();j<8;j++)
         binary="0"+binary;
     str=str+binary;
     if(i%4==3)
     { sixteen[c++]=str.substring(fp,lp);
     fp=lp;lp=lp+32;}

     }
    if(i%4!=0)
     { sixteen[c++]=str.substring(fp,str.length());
       for(j=sixteen[c-1].length();j<32;j++)
           sixteen[c-1]="0"+sixteen[c-1];
    }
     for(i=0;i<c;i++)
     {
         encod[i]=new BigInteger(sixteen[i].toString(), 2);
         encry[i]=encod[i].modPow(e,n);
         //System.out.println(sixteen[i]+" \t "+encod[i]+" \t "+encry[i]);
         binary=Integer.toBinaryString(encry[i].intValue());
         for(j=binary.length();j<32;j++) binary="0"+binary;
         //System.out.println("okoii"+binary);
         //System.out.println(Integer.parseInt(binary.substring(0,8),2));
         for(j=0;j<32;j+=8)
        coded=coded+(char)Integer.parseInt(binary.substring(j,j+8),2);
  }
        //System.out.println("The binarytext is \""+binary+"\"");
//        System.out.println("The ciphertext is \""+coded+"\"");
        return(coded);
    }
    public static String binary_code(int k,String code)
    {
        String bin_code="";
        for(int i=0;i<k;i++)
        {
            bin=Integer.toBinaryString(code.charAt(i));
            for(int j=bin.length();j<8;j++)
                bin="0"+bin;
            bin_code=bin_code+bin;
        }
        return(bin_code);
    }


    @SuppressWarnings("empty-statement")
    public static void encode(int a, File f, String sf) throws IOException
    {
        BufferedImage image = null;
		try{
			//File file=new File("Water.jpg");
			image=ImageIO.read(f);
		}catch(IIOException e){
            //System.out.println(e+"alok ranjan");
        }
		BufferedImage img=null;
        int w=image.getWidth();
        int h=image.getHeight();
		int pixels[]=new int[w*h];
		try{
		PixelGrabber pg=new PixelGrabber(image,0,0,w,h,pixels,0,w);
		pg.grabPixels();
        }catch(Exception es){
            //System.out.println(es+"alok");
        }
        int p=pixels[0];
        int r=0xff & (p>>16);
        int g=0xff & (p>>8);
        int b=0xff & (p);

        //System.out.println("b="+b+"  r="+r+"  g="+g);
        b=(a)&0xffffff;
        //r=(a)&0xff;
        //g=(a)&0xff;
        //pixels[0]=(255<<24)|(r<<16)|(g<<8)|b;
        pixels[0]=(255<<24)|b;
        //pixels[0]=b;

        /*p=pixels[0];
        r=0xff & (p>>16);
        g=0xff & (p>>8);
        b=0xff & (p);
        System.out.println("b="+b+"  r="+r+"  g="+g);*/
        //int alok=(w*h-1)/a;
        //System.out.println("alok"+alok);
        //int k=1;
        int nh=h;
        if(h%2==0)
            nh=h-1;
        int incre_w=coprime(w);
        int incre_h=coprime(nh);
        int k=incre_w;
        int l=incre_h;
        //System.out.println(" "+incre_w+" "+incre_h);
        p=pixels[l*w+k] ;
        r=0xff & (p>>16);
        g=0xff & (p>>8);
        b=(a1)&0xff;
        pixels[l*w+k]= (255<<24)|(r<<16)|(g<<8)|b;
        k=k+incre_w;
        l = l+ incre_h;
        for(int i=0;i<a;i++)
        {
            if(k>=w)
                k-=w;
            if(l>=nh)
                l-=nh;
            p=pixels[l*w+k];
            r=0xff&(p>>16);
            g=0xff&(p>>8);
            b=0xff&(p);

            if(bin1.charAt(i)=='1')
            {
                if(b%2==0)
                    b++;
                b=(b)&0xff;
                pixels[l*w+k]=(255<<24)|(r<<16)|(g<<8)|(b);
            }
            else
            {
                if(b%2!=0)
                    b++;
                b=(b)&0xff;
                pixels[l*w+k]=(255<<24)|(r<<16)|(g<<8)|(b);
            }
            //k=k+alok;
            k=k+incre_w;
            l=l+incre_h;
            
        }
        img=new BufferedImage(w,h,BufferedImage.TYPE_INT_RGB);
		img.setRGB(0,0,w,h,pixels,0,w);
        /*FileOutputStream fos=new FileOutputStream("sachi.png");
		JPEGImageEncoder jpeg=JPEGCodec.createJPEGEncoder(fos);
		jpeg.encode(img);
        fos.close();*/
        /*p=pixels[0];
        r=0xff & (p>>>16);
        g=0xff & (p>>>8);
        b=0xff & (p);

        System.out.println("r="+r+" g="+g+" b="+b);*/
        try{
            //file.delete();
            File file=new File(sf);
            file.delete();
            ImageIO.write(img,"png",file);
        }catch(Exception e){}
       new Done().setVisible(true);
    }
    public static int coprime(int n)
    {
        int i;
        for(i=2;i<=n/2;i++)
            if(n%i!=0)
                break;
        return(i);
    }
}
