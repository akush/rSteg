
import java.awt.image.BufferedImage;
import java.awt.image.PixelGrabber;
import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.IIOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * decryptFrame.java
 *
 * Created on 3 Apr, 2009, 12:55:46 PM
 */

/**
 *
 * @author abhinav
 */
public class decryptFrame extends javax.swing.JFrame {

    /** Creates new form decryptFrame */
    static String pass = "", msg ="", filename = "";
    JFileChooser fc;
    File file;
    int isCorrectPass = 1;
    public decryptFrame() {
        initComponents();
        fc = new JFileChooser();
        //fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.addChoosableFileFilter(new pngFilter());
            fc.setAcceptAllFileFilterUsed(false);
            	    //Add custom icons for file types.
            fc.setFileView(new ImageFileView());

	    //Add the preview pane.
            fc.setAccessory(new ImagePreview(fc));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        OK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        selectfile = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        browse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        jLabel1.setText("Text hidden is:");

        selectfile.setEditable(false);
        selectfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectfileActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter PIN");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel4.setText("Choose Image");

        jLabel5.setText("Â© rSteg 1.0");

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(selectfile, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browse, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectfile, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK)
                    .addComponent(cancel))
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        try {
            // TODO add your handling code here:
            msg = decrypt(code(filename), new BigInteger("3078434453"), new BigInteger("1846993025"));
        } catch (IOException ex) {
            Logger.getLogger(decryptFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(pass.equals(jTextField2.getText()))
            jTextArea1.setText(msg);
        else
        {JOptionPane.showMessageDialog(this, "You have entered a wrong PIN !");}
}//GEN-LAST:event_OKActionPerformed

    private void selectfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectfileActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_selectfileActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.setVisible(false);
}//GEN-LAST:event_cancelActionPerformed

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        // TODO add your handling code here:
        int returnVal = fc.showOpenDialog(decryptFrame.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            filename = "" + file;
            selectfile.setText(filename);
            //This is where a real application would open the file.
            //log.append("Opening: " + file.getName() + "." + newline);

        }
        // log.setCaretPosition(log.getDocument().getLength());
}//GEN-LAST:event_browseActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        //str = jTextField2.getText();
        //System.out.println(str);
}//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField2KeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        try  {
                new About().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new decryptFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JButton browse;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField selectfile;
    // End of variables declaration//GEN-END:variables
    public static BigInteger toDecimal(BigInteger t)
    {
        BigInteger s=new BigInteger("0"),rem,two=new BigInteger("2");
        BigInteger i=new BigInteger("1");
        while(t.compareTo(new BigInteger("0"))!=0)
        {
            rem=t.remainder(new BigInteger("10"));
            //System.out.println("remainder:"+rem);
            s=s.add(rem.multiply(i));
            //System.out.println("s="+s);
            i=i.multiply(new BigInteger("2"));
            //System.out.println("i="+i);
            t=t.divide(new BigInteger("10"));
        }
        return s;
    }

public static String decrypt(String code,BigInteger n, BigInteger d)
{
    String t=new String("");
    String binary[]=new String[1000000],msg1=new String("");
    BigInteger decry[]=new BigInteger[1000000];
    BigInteger encry[]=new BigInteger[1000000];
    int j=-1;
    for(int i=0;i<code.length();i++)
    {if(i%4==0) {j++;binary[j]="";}
     t=Long.toBinaryString((long)(code.charAt(i)));
     for(int k=t.length();k<8;k++) t="0"+t;
        binary[j]=binary[j]+t;
    }
   // System.out.println("j is"+j);
    for(int i=0;i<=j;i++)
    {
        int a=5;
        if(binary[i].equals("")) break;
        //System.out.println("Binary is::"+binary[i]);

        BigInteger t1=new BigInteger(binary[i],10);
        encry[i]=toDecimal(t1);
        decry[i]=encry[i].modPow(d,n);
        //System.out.println("hee hee"+encry[i]+"\t\t"+decry[i]);
        binary[i]=Long.toBinaryString(decry[i].longValue());
         for(int pp=binary[i].length();pp<32;pp++) binary[i]="0"+binary[i];
        //System.out.println("Binary is:"+binary[i]);
        for(int k=0;k<25;k+=8)
        { if(binary[i].substring(k,k+8).equals("00000000"))
              continue;
          msg1+=(char)Integer.parseInt(binary[i].substring(k, k+8),2);

    }
    //System.out.println("whoosh::::"+msg);
}

    return msg1;

}
    public static int coprime(int n)
    {
        int i;
        for(i=2;i<=n/2;i++)
            if(n%i!=0)
                break;
        return(i);
    }
    public static String code(String pngfile) throws IOException
    {
        BufferedImage image = null;
		try{
			File file=new File(pngfile);
			image=ImageIO.read(file);
		}catch(IIOException e){
            //System.out.println("Image not found");
        }
		BufferedImage img=null;
        int w=image.getWidth();
        int h=image.getHeight();
		int pixels[]=new int[w*h];
		try{
		PixelGrabber pg=new PixelGrabber(image,0,0,w,h,pixels,0,w);
		pg.grabPixels();
        }catch(Exception es){
            //System.out.println(es+"alok");
        }
        int p=pixels[0];
        int b=0xffffff & (p);
        String bin="";
//        System.out.println("b="+b);
        //int i=1;
        int nh=h;
        if(h%2==0)
            nh=h-1;
        int incre_w=coprime(w);
        int incre_h=coprime(nh);
        int k=incre_w;
        int l=incre_h;
        p=pixels[l*w+k];
        int b1=0xff&(p);
        k=k+incre_w;
        l=l+incre_h;
        for(int j=0;j<b;j++)
        {
            p=pixels[l*w+k];
            int m=0xff &(p);
            if(m%2==0)
            bin=bin+'0';
            else
                bin=bin+'1';
            //i=i+2499;
            k=k+incre_w;
            l=l+incre_h;
            if(k>=w)
                k-=w;
            if(l>=nh)
                l-=nh;
        }
        //System.out.println("bin="+bin);
        String coded="";
        pass="";
        String bin1=bin.substring(b-b1, b);
        bin=bin.substring(0, b-b1);
        k=bin.length();
        for(int j=0;j<k;j+=8)
        coded=coded+(char)Integer.parseInt(bin.substring(j,j+8),2);
        k=bin1.length();
        for(int j=0;j<k;j+=8)
            pass=pass+(char)Integer.parseInt(bin1.substring(j,j+8),2);
        pass = decrypt(pass,new BigInteger("3078434453"),new BigInteger("1846993025"));
        //System.out.println("pass="+pass);
        //System.out.println("coded="+coded);
        return(coded);
    }
}
